<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <LangVersion>7.3</LangVersion>
    <TypeScriptExperimentalDecorators>true</TypeScriptExperimentalDecorators>
    <UserSecretsId>655b1e1f-1775-49d7-bad0-e6229aa20c71</UserSecretsId>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <PropertyGroup>
    <NpmBuild Condition=" '$(Configuration)' == 'Debug' ">build-dev</NpmBuild>
    <NpmBuild Condition=" '$(NpmBuild)' == '' ">build</NpmBuild>
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="wwwroot\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" Version="2.1.4" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.4" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Data\opieandanthonylive.Data\opieandanthonylive.Data.csproj" />
  </ItemGroup>

  <ItemGroup>
    <ClientSrc Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <UpToDateCheckInput Include="$(SpaRoot)package-lock.json" />
    <UpToDateCheckInput Include="@(ClientSrc)" />
    <UpToDateCheckBuilt Include="$(SpaRoot)node_modules\.npm_timestamp" />
    <UpToDateCheckBuilt Include="$(MSBuildThisFileDirectory)obj\$(Configuration)\.vue_timestamp" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <Target Name="EnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
  </Target>

  <Target Name="NpmInstall" BeforeTargets="Build" DependsOnTargets="EnsureNodeEnv" Inputs="$(SpaRoot)package-lock.json" Outputs="$(SpaRoot)node_modules\.npm_timestamp">
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />

    <!-- Touch an empty file so we know the last time we ran restore. If the timestamp on this file is greater than the
         timestamp on the package-lock.json file then this build step will be skipped. -->
    <Touch Files="$(SpaRoot)node_modules\.npm_timestamp" AlwaysCreate="true">
      <Output TaskParameter="TouchedFiles" ItemName="FileWrites" />
    </Touch>
  </Target>

  <Target Name="RunVueCli" AfterTargets="BeforeBuild" DependsOnTargets="NpmInstall" Inputs="@(ClientSrc)" Outputs="$(MSBuildThisFileDirectory)obj\$(Configuration)\.vue_timestamp" Condition=" '$(Configuration)' == 'Debug'">
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run $(NpmBuild)" />

    <Touch Files="$(MSBuildThisFileDirectory)obj\$(Configuration)\.vue_timestamp" AlwaysCreate="true">
      <Output TaskParameter="TouchedFiles" ItemName="FileWrites" />
    </Touch>
  </Target>

  <Target Name="VueFirstBuild" BeforeTargets="RunVueCli" Condition=" !Exists('wwwroot\index.html') ">
    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Delete Files="$(MSBuildThisFileDirectory)obj\$(Configuration)\.vue_timestamp" />
  </Target>

  <Target Name="PublishRunVueCli" AfterTargets="ComputeFilesToPublish" DependsOnTargets="NpmInstall">

    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
